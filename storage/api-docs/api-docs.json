{
    "openapi": "3.0.0",
    "info": {
        "title": "Rado",
        "description": "Documentation for hackaton project",
        "contact": {
            "email": "mail@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/book_requests": {
            "get": {
                "tags": [
                    "Book Request"
                ],
                "summary": "Get list of Book Requests",
                "description": "Returns list of Book Requests",
                "operationId": "bookRequestList",
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookRequestJsonModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Book Request"
                ],
                "summary": "Create Book Request",
                "description": "Create new Book Request",
                "operationId": "bookRequestCreate",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequestJsonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookRequestJsonModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/book_requests/{id}": {
            "delete": {
                "tags": [
                    "Book Request"
                ],
                "summary": "Delete Book Request",
                "description": "Delete Book Request",
                "operationId": "bookRequestDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Book request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Book Request"
                ],
                "summary": "Update Book Request",
                "description": "Update Book Request",
                "operationId": "bookRequestUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Book request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequestJsonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookRequestJsonModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/leave_requests": {
            "get": {
                "tags": [
                    "Leave Request"
                ],
                "summary": "Get list of Leave Requests",
                "description": "Returns list of Leave Requests",
                "operationId": "leaveRequestList",
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LeaveRequestJsonModel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Leave Request"
                ],
                "summary": "Create Leave Request",
                "description": "Create new Leave Request",
                "operationId": "leaveRequestCreate",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveRequestJsonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveRequestJsonModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/leave_requests/{id}": {
            "delete": {
                "tags": [
                    "Leave Request"
                ],
                "summary": "Delete Leave Request",
                "description": "Delete Leave Request",
                "operationId": "leaveRequestDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Leave request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveRequestJsonModel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Leave Request"
                ],
                "summary": "Update Leave Request",
                "description": "Update Leave Request",
                "operationId": "leaveRequestUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Leave request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveRequestJsonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rooms": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Get list of Rooms",
                "description": "Returns list of Rooms",
                "operationId": "roomIndex",
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoomSchemaResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Room"
                ],
                "summary": "Create Room",
                "description": "Create new Room",
                "operationId": "roomCreate",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoomSchemaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoomSchemaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/rooms/{id}": {
            "delete": {
                "tags": [
                    "Room"
                ],
                "summary": "Delete Room",
                "description": "Delete existing Room",
                "operationId": "roomDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Room",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Room"
                ],
                "summary": "Update Room",
                "description": "Update existing room",
                "operationId": "roomUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Room",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Keyword data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoomSchemaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RoomSchemaResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of Users",
                "description": "Returns list of Users",
                "operationId": "userIndex",
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserSchemaResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "description": "Create new User",
                "operationId": "userCreate",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSchemaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchemaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "description": "Delete existing User",
                "operationId": "userDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "description": "Update existing user",
                "operationId": "userUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Keyword data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSchemaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserSchemaResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/workplaces": {
            "get": {
                "tags": [
                    "Workplace"
                ],
                "summary": "Get Workplaces list",
                "description": "Returns list of Workplaces",
                "operationId": "workplaceIndex",
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkplaceSchemaResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Workplace"
                ],
                "summary": "Create new Workplace",
                "description": "Create new Workplace",
                "operationId": "workplaceCreate",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkplaceSchemaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkplaceSchemaResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/workplaces/{id}": {
            "get": {
                "tags": [
                    "Workplace"
                ],
                "summary": "Get specific Workplace",
                "description": "Returns specific Workplace with User detailed information",
                "operationId": "workplaceGet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Workplace",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkplaceSchemaResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponse": {
                "title": "Api response",
                "description": "Common Api response",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Message",
                        "type": "string",
                        "example": "Specific response message"
                    }
                },
                "type": "object"
            },
            "LeaveRequestJsonRequest": {
                "title": "Leave Request validation request",
                "description": "Leave Request validation request",
                "properties": {
                    "user_id": {
                        "description": "User id",
                        "type": "integer"
                    },
                    "start_date": {
                        "description": "Start date",
                        "type": "string"
                    },
                    "end_date": {
                        "description": "End date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LeaveRequestJsonModel": {
                "title": "Leave Request",
                "description": "Leave Request",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User id",
                        "type": "integer"
                    },
                    "start_date": {
                        "description": "Start date",
                        "type": "string"
                    },
                    "end_date": {
                        "description": "End date",
                        "type": "string"
                    },
                    "create_at": {
                        "description": "Created at",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "Updated at",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BookRequestJsonRequest": {
                "title": "Book Request validation request",
                "description": "Book Request validation request",
                "properties": {
                    "user_id": {
                        "description": "User id",
                        "type": "integer"
                    },
                    "room_id": {
                        "description": "Room id",
                        "type": "integer"
                    },
                    "from": {
                        "description": "Booked from date time",
                        "type": "string",
                        "example": "2020-12-20 20:20:20"
                    },
                    "to": {
                        "description": "Booked to date time",
                        "type": "string",
                        "example": "2020-12-20 20:20:20"
                    }
                },
                "type": "object"
            },
            "BookRequestJsonModel": {
                "title": "Book Request",
                "description": "Book Request",
                "properties": {
                    "id": {
                        "description": "Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User id",
                        "type": "integer"
                    },
                    "room_id": {
                        "description": "Room id",
                        "type": "integer"
                    },
                    "from": {
                        "description": "Booked from date time",
                        "type": "string",
                        "example": "2020-12-20 20:20:20"
                    },
                    "to": {
                        "description": "Booked to date time",
                        "type": "string",
                        "example": "2020-12-20 20:20:20"
                    },
                    "create_at": {
                        "description": "Created at",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "Updated at",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserSchemaRequest": {
                "title": "User schema request",
                "description": "User model for request",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "name": {
                        "description": "Name of user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "John"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "john.doe@gmail.com"
                    },
                    "photo": {
                        "description": "Link to user's photo",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "host.com/photo.png"
                    },
                    "phone": {
                        "description": "User's mobile phone number",
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 1,
                        "example": "+380961234567"
                    },
                    "position": {
                        "description": "User's position in company",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Project manager"
                    },
                    "team": {
                        "description": "Team of user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Nexus"
                    },
                    "workplace_id": {
                        "description": "Place where user works",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UserSchemaResponse": {
                "title": "User schema response",
                "description": "User model for response",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "name": {
                        "description": "Name of user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "John"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "john.doe@gmail.com"
                    },
                    "photo": {
                        "description": "Link to user's photo",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "host.com/photo.png"
                    },
                    "phone": {
                        "description": "User's mobile phone number",
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 1,
                        "example": "+380961234567"
                    },
                    "position": {
                        "description": "User's position in company",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Project manager"
                    },
                    "team": {
                        "description": "Team of user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Nexus"
                    },
                    "workplace_id": {
                        "description": "Place where user works",
                        "type": "integer",
                        "example": 1
                    },
                    "online": {
                        "description": "Is user online",
                        "type": "boolean",
                        "example": true
                    },
                    "equipment": {
                        "description": "Equipment attached to user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentSchemaResponse"
                        }
                    }
                },
                "type": "object"
            },
            "WorkplaceSchemaRequest": {
                "title": "Workplace schema request",
                "description": "Workplace model for request",
                "properties": {
                    "name": {
                        "description": "Workplace identity name",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "example": "Johnny Sins workplace"
                    }
                },
                "type": "object"
            },
            "WorkplaceSchemaResponse": {
                "title": "Workplace schema response",
                "description": "Workplace model for response",
                "properties": {
                    "name": {
                        "description": "Workplace identity name",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "example": "Johnny Sins workplace"
                    },
                    "user": {
                        "description": "User, who works here",
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "equipment": {
                        "description": "Equipment attached to workplace",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EquipmentSchemaResponse"
                        }
                    }
                },
                "type": "object"
            },
            "RoomTypeSchemaResponse": {
                "title": "RoomType schema response",
                "description": "RoomType model for response",
                "properties": {
                    "name": {
                        "description": "Room type identity name",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Game room"
                    }
                },
                "type": "object"
            },
            "RoomSchemaRequest": {
                "title": "Room schema request",
                "description": "Room model for request",
                "properties": {
                    "name": {
                        "description": "Room identity name",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Room where Johnny Sins work"
                    },
                    "photo": {
                        "description": "Link to room's photo",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "host.com/photo.png"
                    },
                    "type_id": {
                        "description": "Type of room",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "RoomSchemaResponse": {
                "title": "Workplace schema response",
                "description": "Workplace model for response",
                "properties": {
                    "name": {
                        "description": "Room identity name",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Room where Johnny Sins work"
                    },
                    "photo": {
                        "description": "Link to room's photo",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "host.com/photo.png"
                    },
                    "type": {
                        "description": "Type of room",
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "future_book_requests": {
                        "description": "Common Schema Objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookRequestJsonModel"
                        }
                    }
                },
                "type": "object"
            },
            "EquipmentSchemaResponse": {
                "title": "Equipment attached to User or Workplace",
                "description": "Equipment model",
                "properties": {
                    "inventory_number": {
                        "description": "Inventory number of equipment",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "A101"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Workplace",
            "description": "Entity describing working place of User"
        },
        {
            "name": "User",
            "description": "Member of Hero Teams"
        },
        {
            "name": "Leave Request",
            "description": "User's leave request"
        },
        {
            "name": "Book Request",
            "description": "Book request"
        }
    ],
    "security": [
        []
    ]
}