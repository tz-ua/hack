{
    "openapi": "3.0.0",
    "info": {
        "title": "hack",
        "description": "Documentation for hackaton project",
        "contact": {
            "email": "mail@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of Users",
                "description": "Returns list of Users",
                "operationId": "userIndex",
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "description": "Create new User",
                "operationId": "userCreate",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSchema"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "description": "Delete existing User",
                "operationId": "userDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/test": {
            "get": {
                "tags": [
                    "Test"
                ],
                "summary": "Test GET request",
                "description": "Return payload from Request for testing",
                "operationId": "testGet",
                "parameters": [
                    {
                        "name": "abc",
                        "in": "query",
                        "description": "ABC desc",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Test"
                ],
                "summary": "Test POST request",
                "description": "Return payload from Request for testing",
                "operationId": "testPost",
                "requestBody": {
                    "description": "Json Content",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestJsonRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfull operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiResponse": {
                "title": "Api response",
                "description": "Common Api response",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Message",
                        "type": "string",
                        "example": "Specific response message"
                    }
                },
                "type": "object"
            },
            "TestJsonRequest": {
                "title": "Admin categroy validation request",
                "description": "Admin categroy validation request",
                "properties": {
                    "fieldName": {
                        "description": "test field",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Example value"
                    }
                },
                "type": "object"
            },
            "UserSchema": {
                "title": "User schema",
                "description": "User model",
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "name": {
                        "description": "Name of user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "John"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "john.doe@gmail.com"
                    },
                    "photo": {
                        "description": "Link to user's photo",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "host.com/photo.png"
                    },
                    "phone": {
                        "description": "User's mobile phone number",
                        "type": "string",
                        "maxLength": 20,
                        "minLength": 1,
                        "example": "+380961234567"
                    },
                    "position": {
                        "description": "User's position in company",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Project manager"
                    },
                    "team": {
                        "description": "Team of user",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Nexus"
                    },
                    "workplace_id": {
                        "description": "Place where user works",
                        "type": "int",
                        "example": "1"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authorization",
            "description": "Admin login and other authorization related actions"
        },
        {
            "name": "Workplace",
            "description": "Entity describing working place of User"
        },
        {
            "name": "User",
            "description": "Member of Hero Teams"
        },
        {
            "name": "LeaveRequest",
            "description": "User's leave request"
        }
    ],
    "security": [
        []
    ]
}